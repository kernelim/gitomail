{
    "docs": [
        {
            "location": "/", 
            "text": "An introduction\n\n\nGitomail is a tool for generating pretty inline-HTML EMails for \nGit\n commits, with sending capability to proper recipients.\n\n\nFirst, some history\n\n\nMany years before \nGit\n became popular or existed, people were using mailing lists in order to collaborate on code changes. The unified diff format, now popularized, as used as a diff format in the ASCII-formatted E-Mails. A text-based console EMail program such as \nmutt\n presented the user a convinent way to handle these diffs and import them into their source trees.\n\n\nBelow is a fake example of such an E-Mail, based on a commit in the PostgreSQL project:\n\n\n\n\nWith the advant of sites like \nGithub\n, EMail became under-used for reviewing changes, and in the Webmail era, E-Mails containing diffs may appear somewhat arcane to developers of today.\n\n\nDiffs in the age of WebMail\n\n\nNowadays, the ASCII version of the EMail message seems outdated. This is where Gitomail comes into the picture.\n\n\nFor example, the E-Mail from above, when sent by Gitomail, can appear like the following:\n\n\n\n\nCombined with full syntax highlighting, the HTML part of the EMail makes this appearance possible.\n\n\nBranch changes summaries\n\n\nTBD\n\n\nAutomatic recipients and code maintainership\n\n\nTBD", 
            "title": "Home"
        }, 
        {
            "location": "/#an-introduction", 
            "text": "Gitomail is a tool for generating pretty inline-HTML EMails for  Git  commits, with sending capability to proper recipients.", 
            "title": "An introduction"
        }, 
        {
            "location": "/#first-some-history", 
            "text": "Many years before  Git  became popular or existed, people were using mailing lists in order to collaborate on code changes. The unified diff format, now popularized, as used as a diff format in the ASCII-formatted E-Mails. A text-based console EMail program such as  mutt  presented the user a convinent way to handle these diffs and import them into their source trees.  Below is a fake example of such an E-Mail, based on a commit in the PostgreSQL project:   With the advant of sites like  Github , EMail became under-used for reviewing changes, and in the Webmail era, E-Mails containing diffs may appear somewhat arcane to developers of today.", 
            "title": "First, some history"
        }, 
        {
            "location": "/#diffs-in-the-age-of-webmail", 
            "text": "Nowadays, the ASCII version of the EMail message seems outdated. This is where Gitomail comes into the picture.  For example, the E-Mail from above, when sent by Gitomail, can appear like the following:   Combined with full syntax highlighting, the HTML part of the EMail makes this appearance possible.", 
            "title": "Diffs in the age of WebMail"
        }, 
        {
            "location": "/#branch-changes-summaries", 
            "text": "TBD", 
            "title": "Branch changes summaries"
        }, 
        {
            "location": "/#automatic-recipients-and-code-maintainership", 
            "text": "TBD", 
            "title": "Automatic recipients and code maintainership"
        }, 
        {
            "location": "/ChangeLog/", 
            "text": "TBD", 
            "title": "Changelog"
        }, 
        {
            "location": "/install/", 
            "text": "TBD", 
            "title": "Installation"
        }, 
        {
            "location": "/config/", 
            "text": "TBD", 
            "title": "Configration"
        }, 
        {
            "location": "/execution/", 
            "text": "TBD", 
            "title": "Execution"
        }, 
        {
            "location": "/gmail/", 
            "text": "TBD", 
            "title": "Recommended GMail filters"
        }
    ]
}